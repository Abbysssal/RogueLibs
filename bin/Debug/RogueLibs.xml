<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RogueLibs</name>
    </assembly>
    <members>
        <member name="T:RogueLibsCore.CustomAbility">
            <summary>
              <para>Represents a custom in-game ability.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomAbility.CompareTo(RogueLibsCore.CustomAbility)">
            <summary>
              <para>Compares this <see cref="T:RogueLibsCore.CustomAbility"/> with <paramref name="another"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomUnlock"/> - "Ability".</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.Available">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomAbility"/> will be accessible in-game. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.AvailableInCharacterCreation">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomAbility"/> will be accessible in the Character Creation menu. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.CostInCharacterCreation">
            <summary>
              <para>Determines the cost of this <see cref="T:RogueLibsCore.CustomAbility"/> in the Character Creation menu, in points. (Default: 1)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.SetupDetails">
            <summary>
              <para>Method that will be invoked when setting up this custom ability. See <see cref="M:InvItem.SetupDetails(System.Boolean)"/> for more details.</para>
              <para><see cref="T:InvItem"/> obj is this custom ability.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.IndicatorCheck">
            <summary>
              <para>Method that will be used to determine an object that the special ability indicator should be displayed over. Return <see langword="null"/> to hide the indicator.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.RechargeInterval">
            <summary>
              <para>Method that will be used to determine the recharging period of this custom ability. Return <see langword="null"/> if the ability is not recharging.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.Recharge">
            <summary>
              <para>Method that will be invoked when recharging this custom ability.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.OnPressed">
            <summary>
              <para>Method that will be invoked when the player presses the special ability button.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.OnHeld">
            <summary>
              <para>Method that will be invoked when the player holds the special ability button.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner;<br/><see cref="T:System.Single"/> arg3 is time in seconds that the player was holding the button.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.OnReleased">
            <summary>
              <para>Method that will be invoked when the player releases the special ability button (or presses the left mouse button).</para>
              <para><see cref="T:InvItem"/> arg1 is this custom ability;<br/><see cref="T:Agent"/> arg2 is the custom ability's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomAbility.CharacterCreation_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:CharacterCreation.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this ability's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomAbility.OnToggledInCharacterCreation">
            <summary>
              <para>Event that is invoked when this ability is toggled on/off in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this ability's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomAbility.OnUnlockedInCharacterCreation">
            <summary>
              <para>Event that is invoked when this ability is unlocked in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this ability's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.ActionRef`3">
            <summary>
              <para>Helper delegate for <see cref="P:RogueLibsCore.CustomAbility.OnHeld"/> event.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomItem">
            <summary>
              <para>Represents a custom in-game item.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomItem.CompareTo(RogueLibsCore.CustomItem)">
            <summary>
              <para>Compares this <see cref="T:RogueLibsCore.CustomItem"/> with <paramref name="another"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomUnlock"/> - "Item".</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.IsActive">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomItem"/> is active and will be obtainable in-game. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.Available">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomItem"/> will be accessible in the Rewards Menu and in-game. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.AvailableInCharacterCreation">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomItem"/> will be accessible in the Character Creation menu. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.AvailableInItemTeleporter">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomItem"/> will be accessible in the Item Teleporter menu. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CostInCharacterCreation">
            <summary>
              <para>Determines the cost of this <see cref="T:RogueLibsCore.CustomItem"/> in the Character Creation menu, in points. (Default: 1)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CostInLoadout">
            <summary>
              <para>Determines the cost of this <see cref="T:RogueLibsCore.CustomItem"/> in the Loadout Menu, in nuggets. (Default: 1)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.SetupDetails">
            <summary>
              <para>Method that will be invoked when setting up this custom item. See <see cref="M:InvItem.SetupDetails(System.Boolean)"/> for more details.</para>
              <para><see cref="T:InvItem"/> obj is this custom item.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.UseItem">
            <summary>
              <para>Method that will be invoked when this custom item is used/consumed on right-click. See <see cref="M:ItemFunctions.UseItem(InvItem,Agent)"/> for more details.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CombineFilter">
            <summary>
              <para>Method that will be used to determine whether an item can be combined with this item.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner;<br/><see cref="T:InvItem"/> arg3 is the other item.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CombineItems">
            <summary>
              <para>Method that will be invoked when this custom item is combined with another item. See <see cref="M:ItemFunctions.CombineItems(InvItem,Agent,InvItem,System.Int32,System.String)"/> for more details.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner;<br/><see cref="T:InvItem"/> arg3 is the other item.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CombineTooltip">
            <summary>
              <para>Method that will be used to determine the combine tooltip text.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner;<br/><see cref="T:InvItem"/> arg3 is the other item.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.TargetFilter">
            <summary>
              <para>Method that will be used to determine whether an object can be targeted by this custom item.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner;<br/><see cref="T:PlayfieldObject"/> arg3 is the targeted object.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.TargetObject">
            <summary>
              <para>Method that will be invoked when this custom item is used on an object. See <see cref="M:ItemFunctions.TargetObject(InvItem,Agent,PlayfieldObject,System.String)"/> for more details.</para>
              <para><see cref="T:InvItem"/> arg1 is this custom item;<br/><see cref="T:Agent"/> arg2 is the custom item's owner;<br/><see cref="T:PlayfieldObject"/> arg3 is the targeted object.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.TargetText">
            <summary>
              <para>Localizable text that will be displayed when targeting objects.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomItem.SetTargetText(RogueLibsCore.CustomNameInfo)">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomName"/> and sets <see cref="P:RogueLibsCore.CustomItem.TargetText"/> to it.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.ScrollingMenu_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:ScrollingMenu.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomItem.CharacterCreation_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:CharacterCreation.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomItem.OnToggledInRewardsMenu">
            <summary>
              <para>Event that is invoked when this item is toggled on/off in the Rewards Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomItem.OnUnlockedInRewardsMenu">
            <summary>
              <para>Event that is invoked when this item is unlocked in the Rewards Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomItem.OnToggledInCharacterCreation">
            <summary>
              <para>Event that is invoked when this item is added/removed in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomItem.OnUnlockedInCharacterCreation">
            <summary>
              <para>Event that is invoked when this item is unlocked in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this item's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomTrait">
            <summary>
              <para>Represents a custom in-game trait.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomTrait.CompareTo(RogueLibsCore.CustomTrait)">
            <summary>
              <para>Compares this <see cref="T:RogueLibsCore.CustomTrait"/> with <paramref name="another"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomUnlock"/> - "Trait".</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.IsActive">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> is active and will be obtainable in-game. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.Available">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> will be accessible in the Traits Menu and in-game. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.AvailableInCharacterCreation">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> will be accessible in the Character Creation menu. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.CostInCharacterCreation">
            <summary>
              <para>Determines the cost of this <see cref="T:RogueLibsCore.CustomTrait"/> in the Character Creation menu, in points. (Default: 1)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.CanRemove">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> can be removed in the Augmentation Booth.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.CanSwap">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> can be swapped in the Augmentation Booth.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.Upgrade">
            <summary>
              <para>Determines the upgraded version of this <see cref="T:RogueLibsCore.CustomTrait"/>. Set to <see langword="null"/> if it's not upgradeable. (Default: <see langword="null"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.IsUpgrade">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomTrait"/> is an upgrade.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.SpecialAbilities">
            <summary>
              <para>Determines the special abilities that this <see cref="T:RogueLibsCore.CustomTrait"/> can be obtained with.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.ScrollingMenu_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:ScrollingMenu.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomTrait.CharacterCreation_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:CharacterCreation.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomTrait.OnToggledInTraitsMenu">
            <summary>
              <para>Event that is invoked when this trait is toggled on/off in the Traits Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomTrait.OnUnlockedInTraitsMenu">
            <summary>
              <para>Event that is invoked when this trait is unlocked in the Traits Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomTrait.OnToggledInCharacterCreation">
            <summary>
              <para>Event that is invoked when this trait is added/removed in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomTrait.OnUnlockedInCharacterCreation">
            <summary>
              <para>Event that is invoked when this trait is unlocked in the Character Creation menu.</para>
              <para><see cref="T:CharacterCreation"/> arg1 is the current instance of <see cref="T:CharacterCreation"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this trait's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.RogueLibs">
            <summary>
              <para>A collection of useful functions for modding Streets of Rogue.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.RogueLibs.pluginGuid">
            <summary>
              <para><see cref="T:RogueLibsCore.RogueLibs"/>' GUID. Use it in your <see cref="T:BepInEx.BepInDependency"/> attribute.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.RogueLibs.pluginName">
            <summary>
              <para><see cref="T:RogueLibsCore.RogueLibs"/>' display name.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.RogueLibs.pluginVersion">
            <summary>
              <para>Do not use this constant in your <see cref="T:BepInEx.BepInDependency"/> attribute!</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.RogueLibs.PluginInstance">
            <summary>
              <para>Main <see cref="T:RogueLibsCore.RogueLibsPlugin"/> instance.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RogueLibs.CustomNames">
            <summary>
              <para>List of initialized <see cref="T:RogueLibsCore.CustomName"/>s.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.EnumerateCustomUnlocks">
            <summary>
              <para>Enumerates through all initialized <see cref="T:RogueLibsCore.CustomUnlock"/>s.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RogueLibs.CustomMutators">
            <summary>
              <para>List of initialized <see cref="T:RogueLibsCore.CustomMutator"/>s.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RogueLibs.CustomItems">
            <summary>
              <para>List of initialized <see cref="T:RogueLibsCore.CustomItem"/>s.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RogueLibs.CustomAbilities">
            <summary>
              <para>List of initialized <see cref="T:RogueLibsCore.CustomAbility"/>s.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RogueLibs.CustomTraits">
            <summary>
              <para>List of initialized <see cref="T:RogueLibsCore.CustomTrait"/>s.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.GetCustomName(System.String,System.String)">
            <summary>
              <para>Finds an existing <see cref="T:RogueLibsCore.CustomName"/> by its <paramref name="id"/> and <paramref name="type"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.CreateCustomName(System.String,System.String,RogueLibsCore.CustomNameInfo)">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomName"/> with the specified <paramref name="id"/>, <paramref name="type"/> and <paramref name="info"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.GetCustomMutator(System.String)">
            <summary>
              <para>Finds an existing <see cref="T:RogueLibsCore.CustomMutator"/> by its <paramref name="id"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.CreateCustomMutator(System.String,System.Boolean,RogueLibsCore.CustomNameInfo,RogueLibsCore.CustomNameInfo)">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomMutator"/> with the specified <paramref name="id"/>, <paramref name="name"/> and <paramref name="description"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.GetCustomItem(System.String)">
            <summary>
              <para>Finds an existing <see cref="T:RogueLibsCore.CustomItem"/> by its <paramref name="id"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.CreateCustomItem(System.String,UnityEngine.Sprite,System.Boolean,RogueLibsCore.CustomNameInfo,RogueLibsCore.CustomNameInfo,System.Action{InvItem})">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomItem"/> with the specified <paramref name="id"/>, <paramref name="sprite"/>, <paramref name="name"/> and <paramref name="description"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.GetCustomAbility(System.String)">
            <summary>
              <para>Finds an existing <see cref="T:RogueLibsCore.CustomAbility"/> by its <paramref name="id"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.CreateCustomAbility(System.String,UnityEngine.Sprite,System.Boolean,RogueLibsCore.CustomNameInfo,RogueLibsCore.CustomNameInfo,System.Action{InvItem})">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomAbility"/> with the specified <paramref name="id"/>, <paramref name="sprite"/>, <paramref name="name"/> and <paramref name="description"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.GetCustomTrait(System.String)">
            <summary>
              <para>Finds an existing <see cref="T:RogueLibsCore.CustomTrait"/> by its <paramref name="id"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueLibs.CreateCustomTrait(System.String,System.Boolean,RogueLibsCore.CustomNameInfo,RogueLibsCore.CustomNameInfo)">
            <summary>
              <para>Creates a new <see cref="T:RogueLibsCore.CustomTrait"/> with the specified <paramref name="id"/>, <paramref name="name"/> and <paramref name="description"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.BaseUnityPluginExtensions">
            <summary>
              <para>Collection of RogueLibs extension methods.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.BaseUnityPluginExtensions.LogError(BepInEx.BaseUnityPlugin,System.String,System.Exception)">
            <summary>
              <para>It's just a shortcut for: <c>Logger.LogError(<paramref name="message"/>); Logger.LogError(<paramref name="e"/>);</c>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.BaseUnityPluginExtensions.PatchPrefix(BepInEx.BaseUnityPlugin,System.Type,System.String,System.Type,System.String,System.Type[])">
            <summary>
              <para>Patches an original method so that the given patch method will be called right before the original.</para>
              <para>Automatically catches and logs all errors. Returns true if the patch was successful, returns false if an error occured.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.BaseUnityPluginExtensions.PatchPostfix(BepInEx.BaseUnityPlugin,System.Type,System.String,System.Type,System.String,System.Type[])">
            <summary>
              <para>Patches an original method so that the given patch method will be called right after the original.</para>
              <para>Automatically catches and logs all errors. Returns true if the patch was successful, returns false if an error occured.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomName">
            <summary>
              <para>Represents a custom localizable in-game string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Id">
            <summary>
              <para>Id of this <see cref="T:RogueLibsCore.CustomName"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomName"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Translations">
            <summary>
              <para>Array of localization strings.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.English">
            <summary>
              <para>Gets/sets the English localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.SChinese">
            <summary>
              <para>Gets/sets the Simplified Chinese localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.German">
            <summary>
              <para>Gets/sets the German localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Spanish">
            <summary>
              <para>Gets/sets the Spanish localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Brazilian">
            <summary>
              <para>Gets/sets the Brazilian localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.Russian">
            <summary>
              <para>Gets/sets the Russian localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.French">
            <summary>
              <para>Gets/sets the French localization string.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomName.KoreanA">
            <summary>
              <para>Gets/sets the Korean (A?) localization string.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomNameInfo">
            <summary>
              <para>Helper struct for creating <see cref="T:RogueLibsCore.CustomName"/>s.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.English">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.SChinese">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.German">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.Spanish">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.Brazilian">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.Russian">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.French">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="F:RogueLibsCore.CustomNameInfo.KoreanA">
            <summary>
              <para>Localization string for this language.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomNameInfo.#ctor(System.String)">
            <summary>
              <para>Initializes a new instance of <see cref="T:RogueLibsCore.CustomNameInfo"/> with the specified <paramref name="english"/> string.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomNameInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
              <para>Initializes a new instance of <see cref="T:RogueLibsCore.CustomNameInfo"/> with the specified language strings.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomNameInfo.ToArray">
            <summary>
              <para>Returns an array of localization strings from this <see cref="T:RogueLibsCore.CustomNameInfo"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomMutator">
            <summary>
              <para>Represents a custom in-game mutator (also known as challenge).</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomMutator.CompareTo(RogueLibsCore.CustomMutator)">
            <summary>
              <para>Compares this <see cref="T:RogueLibsCore.CustomMutator"/> with <paramref name="another"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomMutator.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomUnlock"/> - "Challenge".</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomMutator.IsActive">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomMutator"/> is active.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomMutator.Available">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomMutator"/> will be accessible in the Mutators Menu. (Default: <see langword="true"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomMutator.ScrollingMenu_PushedButton">
            <summary>
              <para>Method that will be used in the <see cref="M:ScrollingMenu.PushedButton(ButtonHelper)"/> patch.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this mutator's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> result determines whether the original RogueLibs patch should be executed.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomMutator.OnToggledInMutatorMenu">
            <summary>
              <para>Event that is invoked when this mutator is toggled on/off in the Mutators Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this mutator's <see cref="T:ButtonHelper"/>;<br/><see cref="T:System.Boolean"/> arg3 is the new state.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomMutator.OnUnlockedInMutatorMenu">
            <summary>
              <para>Event that is invoked when this mutator is unlocked in the Mutators Menu.</para>
              <para><see cref="T:ScrollingMenu"/> arg1 is the current instance of <see cref="T:ScrollingMenu"/>;<br/><see cref="T:ButtonHelper"/> arg2 is this mutator's <see cref="T:ButtonHelper"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.CustomUnlock">
            <summary>
              <para>Represents a custom in-game unlock.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Id">
            <summary>
              <para>Identifier of this <see cref="T:RogueLibsCore.CustomUnlock"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Type">
            <summary>
              <para>Type of this <see cref="T:RogueLibsCore.CustomUnlock"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Name">
            <summary>
              <para>Localizable name of this <see cref="T:RogueLibsCore.CustomUnlock"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Description">
            <summary>
              <para>Localizable description of this <see cref="T:RogueLibsCore.CustomUnlock"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.SortingOrder">
            <summary>
              <para>Determines the position of this <see cref="T:RogueLibsCore.CustomUnlock"/> in lists. (Default: -1)</para>
              <para>&lt;0 - the <see cref="T:RogueLibsCore.CustomUnlock"/> will be placed before all original unlocks;<br/>=0 - the <see cref="T:RogueLibsCore.CustomUnlock"/> will be placed with original unlocks;<br/>&gt;0 - the <see cref="T:RogueLibsCore.CustomUnlock"/> will be placed after all original unlocks.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.SortingIndex">
            <summary>
              <para>Determines the position of this <see cref="T:RogueLibsCore.CustomUnlock"/> in lists, if its SortingOrder equals to another's SortingOrder. (Default: 0)</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomUnlock.CompareTo(RogueLibsCore.CustomUnlock)">
            <summary>
              <para>Compares this <see cref="T:RogueLibsCore.CustomUnlock"/> with <paramref name="another"/>.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Unlocked">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomUnlock"/> is unlocked. Use <see cref="M:RogueLibsCore.CustomUnlock.DoUnlock(System.Boolean)"/> for unlocking.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.UnlockCost">
            <summary>
              <para>Determines the unlock cost of this <see cref="T:RogueLibsCore.CustomUnlock"/>, in nuggets. Set to <see langword="null"/> to make it non-purchasable. (Default: <see langword="null"/>)</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Available">
            <summary>
              <para>Determines whether this <see cref="T:RogueLibsCore.CustomUnlock"/> will be available in standard unlock lists.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Categories">
            <summary>
              <para>Determines the categories of this <see cref="T:RogueLibsCore.CustomUnlock"/>. Barely used in the game.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Conflicting">
            <summary>
              <para>Determines the conflicting unlocks of this <see cref="T:RogueLibsCore.CustomUnlock"/>. They will be automatically disabled when this one is enabled.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Prerequisites">
            <summary>
              <para>Determines the prerequisite unlocks for this <see cref="T:RogueLibsCore.CustomUnlock"/>. Without all of them, the <see cref="T:RogueLibsCore.CustomUnlock"/> will be non-purchasable.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Recommendations">
            <summary>
              <para>Determines the recommended unlocks for this <see cref="T:RogueLibsCore.CustomUnlock"/>. They are displayed in the Character Creation menu.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.GetSpecialUnlockInfo">
            <summary>
              <para>Determines the special unlock information. See <see cref="M:Unlocks.GetSpecialUnlockInfo(System.String,Unlock)"/> for more info.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.CustomUnlock.Sprite">
            <summary>
              <para>Determines the <see cref="T:UnityEngine.Sprite"/> that will be used for this <see cref="T:RogueLibsCore.CustomUnlock"/>.</para>
            </summary>
        </member>
        <member name="E:RogueLibsCore.CustomUnlock.OnUnlocked">
            <summary>
              <para>Event that is invoked when this unlock is unlocked using <see cref="M:Unlocks.DoUnlock(System.String,System.String)"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.CustomUnlock.DoUnlock(System.Boolean)">
            <summary>
              <para>Unlocks this <see cref="T:RogueLibsCore.CustomUnlock"/> using <see cref="M:Unlocks.DoUnlock(System.String,System.String)"/> and updates all menus.</para>
            </summary>
            <param name="playSound">Determines whether the "BuyUnlock" sound effect should be played.</param>
        </member>
        <member name="T:RogueLibsCore.RoguePatcher">
            <summary>
              <para>A class to simplify Harmony patching.</para>
            </summary>
        </member>
        <member name="P:RogueLibsCore.RoguePatcher.TypeWithPatches">
            <summary>
              <para>Type, that this <see cref="T:RogueLibsCore.RoguePatcher"/> will search patch methods in.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RoguePatcher.#ctor(BepInEx.BaseUnityPlugin,System.Type)">
            <summary>
              <para>Initializes a new instance of <see cref="T:RogueLibsCore.RoguePatcher"/> for the specified <paramref name="plugin"/> with <paramref name="typeWithPatches"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RoguePatcher.SwitchTo(System.Type)">
            <summary>
              <para>Changes this <see cref="T:RogueLibsCore.RoguePatcher"/>'s target type.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RoguePatcher.Prefix(System.Type,System.String,System.Type[])">
            <summary>
              <para>Patches an original method with a prefix-method called "<paramref name="type"/>_<paramref name="methodName"/>" in this <see cref="P:RogueLibsCore.RoguePatcher.TypeWithPatches"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RoguePatcher.Postfix(System.Type,System.String,System.Type[])">
            <summary>
              <para>Patches an original method with a postfix-method called "<paramref name="type"/>_<paramref name="methodName"/>" in this <see cref="P:RogueLibsCore.RoguePatcher.TypeWithPatches"/>.</para>
            </summary>
        </member>
        <member name="T:RogueLibsCore.RogueUtilities">
            <summary>
              <para>Collection of some useful functions, that you might need.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueUtilities.ConvertToSprite(System.String)">
            <summary>
              <para>Converts a .png or .jpg file into a <see cref="T:UnityEngine.Sprite"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueUtilities.ConvertToSprite(System.String,System.Int32)">
            <summary>
              <para>Converts a .png or .jpg file into a <see cref="T:UnityEngine.Sprite"/> with the specified pixel-per-unit value (default - 64).</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueUtilities.ConvertToSprite(System.Byte[])">
            <summary>
              <para>Converts a .png or .jpg byte array into a <see cref="T:UnityEngine.Sprite"/>.</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueUtilities.ConvertToSprite(System.Byte[],System.Int32)">
            <summary>
              <para>Converts a .png or .jpg byte array into a <see cref="T:UnityEngine.Sprite"/> with the specified pixel-per-unit value (default - 64).</para>
            </summary>
        </member>
        <member name="M:RogueLibsCore.RogueUtilities.ConvertToAudioClip(System.String)">
            <summary>
              <para>Converts a .mp3, .ogg, .wav or .aiff (it is recommended to use .ogg, since other formats might not load properly) file into an <see cref="T:UnityEngine.AudioClip"/>.</para>
            </summary>
        </member>
    </members>
</doc>
