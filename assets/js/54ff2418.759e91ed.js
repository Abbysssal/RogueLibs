(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[565],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return p}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(n),p=a,f=m["".concat(l,".").concat(p)]||m[p]||d[p]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3919:function(e,t,n){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},4996:function(e,t,n){"use strict";n.d(t,{C:function(){return i},Z:function(){return o}});var r=n(2263),a=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,o=i.forcePrependBaseUrl,s=void 0!==o&&o,l=i.absolute,u=void 0!==l&&l;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(s)return t+n;var c=n.startsWith(t)?n:t+n.replace(/^\//,"");return u?e+c:c}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},9443:function(e,t,n){"use strict";var r=(0,n(7294).createContext)(void 0);t.Z=r},944:function(e,t,n){"use strict";var r=n(7294),a=n(9443);t.Z=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},9309:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var r=n(2122),a=n(9756),i=n(7294),o=["children"];function s(e){var t=e.children,n=(0,a.Z)(e,o);return i.createElement("div",(0,r.Z)({role:"tabpanel"},n),t)}},9037:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var r=n(7294),a=n(944),i=n(6010),o="tabItem_2O3c",s="tabItemActive_Fpbe",l="tab_1pgU";var u=37,c=39;var d=function(e){var t=e.lazy,n=e.block,d=e.defaultValue,m=e.values,p=e.groupId,f=e.className,h=(0,a.Z)(),v=h.tabGroupChoices,g=h.setTabGroupChoices,y=(0,r.useState)(d),k=y[0],b=y[1],C=r.Children.toArray(e.children),w=[];if(null!=p){var N=v[p];null!=N&&N!==k&&m.some((function(e){return e.value===N}))&&b(N)}var O=function(e){var t=e.currentTarget,n=w.indexOf(t),r=m[n].value;b(r),null!=p&&(g(p,r),setTimeout((function(){var e,n,r,a,i,o,l,u;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,i=e.right,o=window,l=o.innerHeight,u=o.innerWidth,n>=0&&i<=u&&a<=l&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},T=function(e){var t,n;switch(e.keyCode){case c:var r=w.indexOf(e.target)+1;n=w[r]||w[0];break;case u:var a=w.indexOf(e.target)-1;n=w[a]||w[w.length-1]}null==(t=n)||t.focus()},S=function(e,t){return t.value===e||t.values&&-1!=t.values.indexOf(e)};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},f)},m.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":k===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:T,onFocus:O,onClick:O},n)}))),t?(0,r.cloneElement)(C.filter((function(e){return S(k,e.props)}))[0],{curSelected:k,className:l}):r.createElement("div",null,C.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:!S(k,e.props),selectedValue:k,className:l})}))),r.createElement("br",null))}},2607:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return m},default:function(){return f}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=n(9037),s=n(9309),l=(n(4996),["components"]),u={},c="Creating a Custom Trait",d={unversionedId:"dev-traits/create-trait",id:"dev-traits/create-trait",isDocsHomePage:!1,title:"Creating a Custom Trait",description:"CustomTrait class",source:"@site/docs/dev-traits/create-trait.mdx",sourceDirName:"dev-traits",slug:"/dev-traits/create-trait",permalink:"/RogueLibs/docs/dev-traits/create-trait",editUrl:"https://github.com/Abbysssal/RogueLibs/edit/master/docs/docs/dev-traits/create-trait.mdx",version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Inventory Events and Checks",permalink:"/RogueLibs/docs/dev-items/inventory-events"}},m=[{value:"<code>CustomTrait</code> class",id:"customtrait",children:[]},{value:"Initialization",id:"initialization",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:m};function f(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-a-custom-trait"},"Creating a Custom Trait"),(0,i.kt)("h2",{id:"customtrait"},(0,i.kt)("inlineCode",{parentName:"h2"},"CustomTrait")," class"),(0,i.kt)("p",null,"To make a custom trait, you need to create a class deriving from ",(0,i.kt)("inlineCode",{parentName:"p"},"CustomTrait"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCustomTrait.cs"',title:'"MyCustomTrait.cs"'},"// highlight-next-line\npublic class MyCustomTrait : CustomTrait\n{\n}\n")),(0,i.kt)("p",null,"There are 3 methods that you need to implement:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCustomTrait.cs"',title:'"MyCustomTrait.cs"'},"public class MyCustomTrait : CustomTrait\n{\n    public override void OnAdded()\n    {\n        Owner.SetStrength(Owner.strengthStatMod + 1);\n        Owner.SetEndurance(Owner.enduranceStatMod + 1);\n        Owner.SetAccuracy(Owner.accuracyStatMod - 1);\n        Owner.SetSpeed(Owner.speedStatMod - 1);\n    }\n    public override void OnRemoved()\n    {\n        Owner.SetStrength(Owner.strengthStatMod - 1);\n        Owner.SetEndurance(Owner.enduranceStatMod - 1);\n        Owner.SetAccuracy(Owner.accuracyStatMod + 1);\n        Owner.SetSpeed(Owner.speedStatMod + 1);\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"OnAdded")," is called when the trait is added to a character, and ",(0,i.kt)("inlineCode",{parentName:"p"},"OnRemoved")," is called when the trait is removed."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"OnUpdated")," works like Unity's ",(0,i.kt)("inlineCode",{parentName:"p"},"Update"),", but with a settable interval. By default, the update interval is 1 second, but you can change it by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"TraitUpdatedArgs.UpdateDelay"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCustomTrait.cs"',title:'"MyCustomTrait.cs"'},"public class MyCustomTrait : CustomTrait\n{\n    public override void OnUpdated(TraitUpdatedArgs e)\n    {\n        e.UpdateDelay = 0.5f; // 2 updates/second\n        // do something\n    }\n}\n")),(0,i.kt)("h2",{id:"initialization"},"Initialization"),(0,i.kt)("p",null,"Just call the following method in your plugin's ",(0,i.kt)("inlineCode",{parentName:"p"},"Awake()"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCoolPlugin.cs"',title:'"MyCoolPlugin.cs"'},"public void Awake()\n{\n    // highlight-next-line\n    RogueLibs.CreateCustomTrait<MyCustomTrait>();\n}\n")),(0,i.kt)("p",null,"You can set your trait's name and description using ",(0,i.kt)("inlineCode",{parentName:"p"},"WithName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"WithDescription")," methods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCoolPlugin.cs"',title:'"MyCoolPlugin.cs"'},'public void Awake()\n{\n    RogueLibs.CreateCustomTrait<MyCustomTrait>();\n    // highlight-start\n        .WithName(new CustomNameInfo("My Custom Trait"))\n        .WithDescription(new CustomNameInfo("My Custom Trait is very cool and does a lot of great stuff"));\n    // highlight-end\n}\n')),(0,i.kt)("p",null,"You can do the same with sprites and unlocks:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="MyCoolPlugin.cs"',title:'"MyCoolPlugin.cs"'},'public void Awake()\n{\n    RogueLibs.CreateCustomTrait<MyCustomTrait>();\n        .WithName(new CustomNameInfo("My Custom Trait"))\n        .WithDescription(new CustomNameInfo("My Custom Trait is very cool and does a lot of great stuff"))\n    // highlight-start\n        .WithSprite(Properties.Resources.MyCustomTrait)\n        // the sprite will be displayed only in the menus (optional)\n        .WithUnlock(new ItemUnlock { UnlockCost = 10, CharacterCreationCost = 5 });\n    // highlight-end\n}\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"See ",(0,i.kt)("a",{parentName:"p",href:"../dev-intro/names"},"Custom Names"),", ",(0,i.kt)("a",{parentName:"p",href:"../dev-intro/sprites"},"Custom Sprites")," for more info."))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)(o.Z,{defaultValue:"smoker",values:[{label:"Smoker",value:"smoker"},{label:""}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"smoker",mdxType:"TabItem"},(0,i.kt)("p",null,"A reference to one of the traits in Void Bastards."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Clients with the Smoker trait will cough randomly, alerting any nearby enemies.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs",metastring:'title="Smoker.cs"',title:'"Smoker.cs"'},'public class Smoker : CustomTrait\n{\n    public override void OnAdded() { }\n    public override void OnRemoved() { }\n    public override void OnUpdated(TraitUpdatedArgs e)\n    {\n        e.UpdateDelay = 5f; // next update will be in 5 seconds\n\n        int rnd = new System.Random().Next(0, 5);\n        if (rnd == 0) // 20% chance every 5 seconds\n        {\n            rnd = new System.Random().Next(3) + 1;\n            Owner.SayDialogue($"Smoker_Cough{rnd}");\n            // randomly say one of the dialogues:\n            // "Smoker_Cough1", "Smoker_Cough2" or "Smoker_Cough3"\n            \n            Noise noise = gc.spawnerMain.SpawnNoise(Owner.tr.position, 1f, Owner, "Attract", Owner);\n            noise.distraction = true;\n            // let nearby characters know about this\n        }\n    }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'RogueLibs.CreateCustomTrait<Smoker>()\n    .WithName(new CustomNameInfo("Smoker"))\n    .WithDescription(new CustomNameInfo("Cough randomly, alerting any nearby enemies"))\n    .WithUnlock(new TraitUnlock\n    {\n        CharacterCreationCost = -3,\n    });\n')))))}f.isMDXComponent=!0},6010:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);