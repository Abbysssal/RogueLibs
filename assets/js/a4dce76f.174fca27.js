(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[43],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,f=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9443:function(e,t,n){"use strict";var a=(0,n(7294).createContext)(void 0);t.Z=a},944:function(e,t,n){"use strict";var a=n(7294),r=n(9443);t.Z=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},9309:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var a=n(2122),r=n(9756),o=n(7294),i=["children"];function s(e){var t=e.children,n=(0,r.Z)(e,i);return o.createElement("div",(0,a.Z)({role:"tabpanel"},n),t)}},9037:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a=n(7294),r=n(944),o=n(6010),i="tabItem_2O3c",s="tabItemActive_Fpbe",l="tab_1pgU";var c=37,u=39;var d=function(e){var t=e.lazy,n=e.block,d=e.defaultValue,p=e.values,h=e.groupId,f=e.className,m=(0,r.Z)(),g=m.tabGroupChoices,y=m.setTabGroupChoices,C=(0,a.useState)(d),v=C[0],b=C[1],k=a.Children.toArray(e.children),I=[];if(null!=h){var w=g[h];null!=w&&w!==v&&p.some((function(e){return e.value===w}))&&b(w)}var E=function(e){var t=e.currentTarget,n=I.indexOf(t),a=p[n].value;b(a),null!=h&&(y(h,a),setTimeout((function(){var e,n,a,r,o,i,l,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,o=e.right,i=window,l=i.innerHeight,c=i.innerWidth,n>=0&&o<=c&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},L=function(e){var t,n;switch(e.keyCode){case u:var a=I.indexOf(e.target)+1;n=I[a]||I[0];break;case c:var r=I.indexOf(e.target)-1;n=I[r]||I[I.length-1]}null==(t=n)||t.focus()},_=function(e,t){return t.value===e||t.values&&-1!=t.values.indexOf(e)};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},f)},p.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,o.Z)("tabs__item",i,{"tabs__item--active":v===t}),key:t,ref:function(e){return I.push(e)},onKeyDown:L,onFocus:E,onClick:E},n)}))),t?(0,a.cloneElement)(k.filter((function(e){return _(v,e.props)}))[0],{curSelected:v,className:l}):a.createElement("div",null,k.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:!_(v,e.props),selectedValue:v,className:l})}))),a.createElement("br",null))}},9:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=n(9037),s=n(9309),l=["components"],c={},u="Patching Utilities",d={unversionedId:"dev-intro/patching",id:"dev-intro/patching",isDocsHomePage:!1,title:"Patching Utilities",description:"RoguePatcher",source:"@site/docs/dev-intro/patching.mdx",sourceDirName:"dev-intro",slug:"/dev-intro/patching",permalink:"/RogueLibs/docs/dev-intro/patching",editUrl:"https://github.com/Abbysssal/RogueLibs/edit/master/docs/docs/dev-intro/patching.mdx",version:"current",frontMatter:{},sidebar:"documentationSidebar",previous:{title:"Custom Sprites",permalink:"/RogueLibs/docs/dev-intro/sprites"},next:{title:"Creating a Custom Item",permalink:"/RogueLibs/docs/dev-items/create-item"}},p=[{value:"<code>RoguePatcher</code>",id:"roguepatcher",children:[{value:"Patching with Harmony",id:"patching-with-harmony",children:[]},{value:"Patching with RoguePatcher",id:"patching-with-roguepatcher",children:[]}]},{value:"Transpiler helper methods",id:"transpiler-helpers",children:[{value:"<code>AddRegionAfter</code> and <code>AddRegionBefore</code>",id:"transpiler-add-region",children:[]},{value:"<code>ReplaceRegion</code>",id:"transpiler-replace-region",children:[]},{value:"<code>RemoveRegion</code>",id:"transpiler-remove-region",children:[]}]}],h={toc:p};function f(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"patching-utilities"},"Patching Utilities"),(0,o.kt)("h2",{id:"roguepatcher"},(0,o.kt)("inlineCode",{parentName:"h2"},"RoguePatcher")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RoguePatcher")," is a small helper class that makes writing patches faster and easier. You don't have a lot of control over how patches work, so, if you need that, use original Harmony methods."),(0,o.kt)("h3",{id:"patching-with-harmony"},"Patching with Harmony"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Harmony harmony = new Harmony(pluginGUID);\nMethodInfo original = AccessTools.Method(typeof(StatusEffects), nameof(StatusEffects.hasStatusEffect));\nMethodInfo patch = AccessTools.Method(GetType(), "MyPatchMethod");\nharmony.Patch(original, patch);\n')),(0,o.kt)("h3",{id:"patching-with-roguepatcher"},"Patching with RoguePatcher"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"RoguePatcher patcher = new RoguePatcher(this);\npatcher.Postfix(typeof(StatusEffects), nameof(StatusEffects.hasStatusEffect));\n")),(0,o.kt)("p",null,"The patcher will look for a method called ",(0,o.kt)("inlineCode",{parentName:"p"},"<TargetType>_<TargetMethod>")," in your plugin's class, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[BepInPlugin(...)]\npublic class MyCoolPlugin : BaseUnityPlugin\n{\n    ...\n    public void Awake()\n    {\n        RoguePatcher patcher = new RoguePatcher(this);\n        patcher.Postfix(typeof(StatusEffects), nameof(StatusEffects.hasStatusEffect));\n    }\n    // highlight-next-line\n    public static void StatusEffects_hasStatusEffect(StatusEffects __instance)\n    {\n        ...\n    }\n}\n")),(0,o.kt)("p",null,"You can put your patches in a different class if you want. Just specify a different type in the constructor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"[BepInPlugin(...)]\npublic class MyCoolPlugin : BaseUnityPlugin\n{\n    ...\n    public void Awake()\n    {\n        // highlight-next-line\n        RoguePatcher patcher = new RoguePatcher(this, typeof(MyCoolPatches));\n        patcher.Postfix(typeof(StatusEffects), nameof(StatusEffects.hasStatusEffect));\n    }\n}\npublic class MyCoolPatches\n{\n    public static void StatusEffects_hasStatusEffect(StatusEffects __instance)\n    {\n        ...\n    }\n}\n")),(0,o.kt)("h2",{id:"transpiler-helpers"},"Transpiler helper methods"),(0,o.kt)("p",null,"Harmony transpilers are really complicated. If you want to insert some code in some very specific place, then you'll have to do a lot of indexes, math, flags and stuff. Luckily, these helper methods will save you a lot of time."),(0,o.kt)("h3",{id:"transpiler-add-region"},(0,o.kt)("inlineCode",{parentName:"h3"},"AddRegionAfter")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"AddRegionBefore")),(0,o.kt)("p",null,"Here's an example from RogueLibs:"),(0,o.kt)(i.Z,{defaultValue:"helper",values:[{label:"With helper methods",value:"helper"},{label:"Without",value:"harmony"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"helper",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<CodeInstruction> StatusEffects_AddStatusEffect(IEnumerable<CodeInstruction> codeEnumerable)\n    => codeEnumerable.AddRegionAfter(\n        new Func<CodeInstruction, bool>[]\n        {\n            i => i.IsLdloc(),\n            i => i.opcode == OpCodes.Ldarg_3,\n            i => i.opcode == OpCodes.Stfld && i.StoresField(causingAgentField),\n        },\n        new Func<CodeInstruction[], CodeInstruction>[]\n        {\n            a => a[0],\n            _ => new CodeInstruction(OpCodes.Ldarg_0),\n            _ => new CodeInstruction(OpCodes.Call, typeof(RogueLibsPlugin).GetMethod(nameof(SetupEffectHook))),\n        });\n\nprivate static readonly FieldInfo causingAgentField = typeof(StatusEffect).GetField(nameof(StatusEffect.causingAgent));\n"))),(0,o.kt)(s.Z,{value:"harmony",mdxType:"TabItem"},(0,o.kt)("p",null,"Yeah, it looks easy. But that's only because it's a very simple example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<CodeInstruction> StatusEffects_AddStatusEffect(IEnumerable<CodeInstruction> code)\n{\n    bool searching = true;\n    int current = 0;\n    CodeInstruction[] matches = new CodeInstruction[after.Length];\n    foreach (CodeInstruction instr in code)\n    {\n        yield return instr;\n        if (searching)\n        {\n            if (current is 0 ? instr.IsLdloc()\n                : current is 1 ? instr.opcode == OpCodes.Ldarg_3\n                : instr.opcode == OpCodes.Stfld && instr.StoresField(causingAgentField))\n            {\n                matches[current] = instr;\n                if (++current is 3)\n                {\n                    searching = false;\n                    yield return matches[0];\n                    yield return new CodeInstruction(OpCodes.Ldarg_0);\n                    yield return new CodeInstruction(OpCodes.Call, typeof(RogueLibsPlugin).GetMethod(nameof(SetupEffectHook)));\n                }\n            }\n            else current = 0;\n        }\n    }\n}\n\nprivate static readonly FieldInfo causingAgentField = typeof(StatusEffect).GetField(nameof(StatusEffect.causingAgent));\n")))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Avoid heavy calculations")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When writing predicates, keep in mind that they might get called hundreds of times. For example, you can pre-calculate the ",(0,o.kt)("inlineCode",{parentName:"p"},"FieldInfo")," value, used by your predicate, just put it in a static readonly field, like in the example above."),(0,o.kt)("p",{parentName:"div"},"Heavy calculations like that can cost you ",(0,o.kt)("strong",{parentName:"p"},"seconds")," of start-up time."))),(0,o.kt)("p",null,"The first array's predicates match to the code, that you want to insert the new instructions after."),(0,o.kt)("p",null,"The second array is an array of ",(0,o.kt)("inlineCode",{parentName:"p"},"Func<CodeInstruction[], CodeInstruction>"),". Each of these functions will be called after finding a place to insert them after. The functions take an array of matched instructions as a parameter. This way you can adapt your code to whatever value ",(0,o.kt)("inlineCode",{parentName:"p"},"ldloc")," uses."),(0,o.kt)("p",null,"For example, there's this IL code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    ...\n    IL_0F83: stfld     bool StatusEffect::removeOnKnockout\n    // highlight-start\n  * IL_0F88: ldloc.s   V_9\n  * IL_0F8A: ldarg.3\n  * IL_0F8B: stfld     class Agent StatusEffect::causingAgent\n    // highlight-end\n    IL_0F90: ldarg.0\n    ...\n")),(0,o.kt)("p",null,"The highlighted instructions are the ones, that the predicates in the first array returned ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," for. The code will be inserted after these instructions. After transpiling the code will look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    ...\n    IL_0F83: stfld     bool StatusEffect::removeOnKnockout\n  * IL_0F88: ldloc.s   V_9\n  * IL_0F8A: ldarg.3\n  * IL_0F8B: stfld     class Agent StatusEffect::causingAgent\n    // highlight-start\n +  IL_XXXX: ldloc.s   V_9\n +  IL_XXXX: ldarg.0\n +  IL_XXXX: call      void RogueLibsCore.RogueLibsPlugin::SetupEffectHook(StatusEffect)\n    // highlight-end\n    IL_XXXX: ldarg.0\n    ...\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"AddRegionBefore")," works the same way, except that it inserts the instructions before, instead of after, the matched instructions."),(0,o.kt)("h3",{id:"transpiler-replace-region"},(0,o.kt)("inlineCode",{parentName:"h3"},"ReplaceRegion")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ReplaceRegion")," just removes the matched instructions and inserts the new ones in their place."),(0,o.kt)("p",null,"Here's another example from RogueLibs:"),(0,o.kt)(i.Z,{defaultValue:"helper",values:[{label:"With helper methods",value:"helper"},{label:"Without",value:"harmony"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"helper",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<CodeInstruction> Unlocks_LoadInitialUnlocks(IEnumerable<CodeInstruction> codeEnumerable)\n    => codeEnumerable.ReplaceRegion(\n        new Func<CodeInstruction, bool>[]\n        {\n            i => i.opcode == OpCodes.Callvirt && i.Calls(List_Unlock_GetEnumerator),\n            i => i.IsStloc(),\n        },\n        new Func<CodeInstruction, bool>[]\n        {\n            i => i.opcode == OpCodes.Callvirt,\n            i => i.opcode == OpCodes.Endfinally,\n            i => i.opcode == OpCodes.Ldarg_0,\n        },\n        new CodeInstruction[]\n        {\n            new CodeInstruction(OpCodes.Pop),\n            new CodeInstruction(OpCodes.Pop),\n            new CodeInstruction(OpCodes.Call, typeof(RogueLibsPlugin).GetMethod(nameof(LoadUnlockWrappersAndCategorize)))\n        }\n    );\n"))),(0,o.kt)(s.Z,{value:"harmony",mdxType:"TabItem"},(0,o.kt)("p",null,"You wouldn't want to do this every time you want to make a transpiler."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<CodeInstruction> Unlocks_LoadInitialUnlocks(IEnumerable<CodeInstruction> code)\n{\n    int state = 0;\n    int current = 0;\n    CodeInstruction[] beginCache = new CodeInstruction[2];\n    foreach (CodeInstruction instr in code)\n    {\n        if (state is 2)\n            yield return instr;\n        else if (state is 0)\n        {\n            if (current is 0 ? instr.opcode == OpCodes.Callvirt && instr.Calls(List_Unlock_GetEnumerator)\n                : instr.IsStloc())\n            {\n                beginCache[current] = instr;\n                if (++current == 2)\n                {\n                    state = 1;\n                    current = 0;\n                }\n            }\n            else\n            {\n                if (current > 0)\n                {\n                    for (int i = 0; i < current; i++)\n                        yield return beginCache[i];\n                    current = 0;\n                }\n                yield return instr;\n            }\n        }\n        else\n        {\n            if (current is 0 ? instr.opcode == OpCodes.Callvirt\n                : current is 1 ? instr.opcode == OpCodes.Endfinally\n                : instr.opcode == OpCodes.Ldarg_0)\n            {\n                if (++current == 3)\n                {\n                    yield return new CodeInstruction(OpCodes.Pop);\n                    yield return new CodeInstruction(OpCodes.Pop);\n                    yield return new CodeInstruction(OpCodes.Call, typeof(RogueLibsPlugin).GetMethod(nameof(LoadUnlockWrappersAndCategorize)));\n                }\n            }\n            else current = 0;\n        }\n    }\n}\n")))),(0,o.kt)("p",null,"By the way, if you're going to remove instructions, then you'll have to take care of their labels. For example, if you remove ",(0,o.kt)("inlineCode",{parentName:"p"},"IL_0CC7"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"bgt.s IL_0CC7")," won't be able to transfer control to the removed ",(0,o.kt)("inlineCode",{parentName:"p"},"IL_0CC7")," label:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    ...\n    IL_XXXX: bgt.s   IL_0CC7\n    ...\n    // highlight-start\n  - IL_0CC7: ldc.i4  9999\n  - IL_0CCC: stloc.0\n  - IL_0CCD: ldarg.0\n    // highlight-end\n    ...\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"    ...\n    IL_XXXX: bgt.s   IL_0CC7\n    ...\n    // highlight-start\n +  IL_YYYY: ldarg.0\n +  IL_XXXX: ldarg.1\n +  IL_XXXX: call    void RogueLibsCore.RogueLibsPlugin::GetStatusEffectTime(StatusEffect, int)\n +  IL_XXXX: stloc.0\n +  IL_XXXX: ldarg.0\n    // highlight-end\n    ...\n")),(0,o.kt)("p",null,"You'll have to copy labels from the removed instructions to the new ones:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},"public static IEnumerable<CodeInstruction> StatusEffects_GetStatusEffectTime(IEnumerable<CodeInstruction> codeEnumerable)\n    => codeEnumerable.ReplaceRegion(\n        new Func<CodeInstruction, bool>[]\n        {\n            i => i.opcode == OpCodes.Ldc_I4 && (int)i.operand is 9999,\n            i => i.IsStloc(),\n            i => i.opcode == OpCodes.Ldarg_0,\n        },\n        new Func<CodeInstruction[], CodeInstruction>[]\n        {\n            // highlight-next-line\n            a => new CodeInstruction(OpCodes.Ldarg_0).WithLabels(a[0]),\n            _ => new CodeInstruction(OpCodes.Ldarg_1),\n            _ => new CodeInstruction(OpCodes.Call, typeof(RogueLibsPlugin).GetMethod(nameof(GetStatusEffectTime))),\n            a => a[1],\n            a => a[2],\n        });\n")),(0,o.kt)("h3",{id:"transpiler-remove-region"},(0,o.kt)("inlineCode",{parentName:"h3"},"RemoveRegion")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"RemoveRegion")," just removes the matched instructions. The label thing applies in here too."))}f.isMDXComponent=!0},6010:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);